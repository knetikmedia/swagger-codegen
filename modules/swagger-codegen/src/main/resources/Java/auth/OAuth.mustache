{{>licenseInfo}}

package {{invokerPackage}}.auth;

import {{invokerPackage}}.Pair;

import java.util.Map;
import java.util.List;

{{>generatedAnnotation}}
public class OAuth implements Authentication {
  private String accessToken;
  private Long expiration;
  private String refreshToken;
  private OAuthExpirationHandler expirationHandler;

  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }
  
  public Long getExpiration() {
    return expiration;
  }

  public void setExpiration(Long expiration) {
    this.expiration = expiration;
  }

  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public OAuthExpirationHandler getExpirationHandler() {
    return expirationHandler;
  }

  public void setExpirationHandler(OAuthExpirationHandler expirationHandler) {
    this.expirationHandler = expirationHandler;
  }

  @Override
  public void applyToParams(List<Pair> queryParams, Map<String, String> headerParams) {
    if (accessToken != null) {
      if (expiration != null && expiration < System.currentTimeMillis())
        if (expirationHandler != null)
          expirationHandler.handle(this);
      if (accessToken != null)
        headerParams.put("Authorization", "Bearer " + accessToken);
    }
  }
}
