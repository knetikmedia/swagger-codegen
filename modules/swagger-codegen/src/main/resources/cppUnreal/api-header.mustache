{{>licenseInfo}}
{{#operations}}/*
 * {{classFilename}}.h
 *
 * {{description}}
 */

#pragma once

{{^parent}}
#include "KnetikCloud.h"
{{/parent}}
{{#operation}}
{{#returnType}}
{{#isMapContainer}}
#include "KnetikCloudStringMap.h"
{{/isMapContainer}}
{{/returnType}}
{{/operation}}
{{#imports}}
{{{import}}}
{{/imports}}
#include <Core.h>
#include <Runtime/Online/HTTP/Public/Http.h>
#include <functional>

#include "{{classFilename}}.generated.h"

{{#operation}}
{{#returnType}}
{{#isListContainer}}
DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(F{{operationId}}Delegate, bool, bSuccessful, const {{{returnType}}}&, Response);
{{/isListContainer}}
{{^isListContainer}}
{{#isMapContainer}}
DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(F{{operationId}}Delegate, bool, bSuccessful, const UKnetikCloudStringMap*, Response);
{{/isMapContainer}}
{{^isMapContainer}}
{{#vendorExtensions.x-codegen-response.isPrimitiveType}}
DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(F{{operationId}}Delegate, bool, bSuccessful, {{{returnBaseType}}}, Response);
{{/vendorExtensions.x-codegen-response.isPrimitiveType}}
{{^vendorExtensions.x-codegen-response.isPrimitiveType}}
{{#vendorExtensions.x-codegen-response.isString}}
DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(F{{operationId}}Delegate, bool, bSuccessful, const FString&, Response);
{{/vendorExtensions.x-codegen-response.isString}}
{{^vendorExtensions.x-codegen-response.isString}}
DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(F{{operationId}}Delegate, bool, bSuccessful, const {{{returnBaseType}}}*, Response);
{{/vendorExtensions.x-codegen-response.isString}}
{{/vendorExtensions.x-codegen-response.isPrimitiveType}}
{{/isMapContainer}}
{{/isListContainer}}
{{/returnType}}
{{^returnType}}
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(F{{operationId}}Delegate, bool, bSuccessful);
{{/returnType}}
{{/operation}}


UCLASS(BlueprintType)
class KNETIKCLOUDSDK_API {{classname}} : public UObject
{
	GENERATED_BODY()

public:
	{{classname}}();
	virtual ~{{classname}}();
	{{#operation}}

	UPROPERTY(BlueprintAssignable, Category = "KnetikCloud")
	F{{operationId}}Delegate On{{operationId}};

	UPROPERTY(BlueprintReadOnly)
	bool b{{operationId}}IsComplete;

	UPROPERTY(BlueprintReadOnly)
	bool b{{operationId}}WasSuccessful;

	{{#returnType}}
	UPROPERTY(BlueprintReadOnly)
	{{#isListContainer}}
	{{{returnType}}} {{operationId}}ServerResponse;

	/// <summary>
	/// {{operationId}} callback that will be invoked when the server response is received.
	/// </summary>
	typedef std::function<void(bool, const {{{returnType}}}&)> {{operationId}}CallbackFunction;
	{{/isListContainer}}
	{{^isListContainer}}
	{{#isMapContainer}}
	UKnetikCloudStringMap* {{operationId}}ServerResponse;

	/// <summary>
	/// {{operationId}} callback that will be invoked when the server response is received.
	/// </summary>
	typedef std::function<void(bool, const UKnetikCloudStringMap *)> {{operationId}}CallbackFunction;
	{{/isMapContainer}}
	{{^isMapContainer}}
	{{#vendorExtensions.x-codegen-response.isPrimitiveType}}
	{{{returnType}}} {{operationId}}ServerResponse;

	/// <summary>
	/// {{operationId}} callback that will be invoked when the server response is received.
	/// </summary>
	typedef std::function<void(bool, {{{returnType}}})> {{operationId}}CallbackFunction;
	{{/vendorExtensions.x-codegen-response.isPrimitiveType}}
	{{^vendorExtensions.x-codegen-response.isPrimitiveType}}
	{{#vendorExtensions.x-codegen-response.isString}}
	FString {{operationId}}ServerResponse;

	/// <summary>
	/// {{operationId}} callback that will be invoked when the server response is received.
	/// </summary>
	typedef std::function<void(bool, const FString&)> {{operationId}}CallbackFunction;
	{{/vendorExtensions.x-codegen-response.isString}}
	{{^vendorExtensions.x-codegen-response.isString}}
	{{{returnType}}} {{operationId}}ServerResponse;

	/// <summary>
	/// {{operationId}} callback that will be invoked when the server response is received.
	/// </summary>
	typedef std::function<void(bool, const {{{returnBaseType}}}*)> {{operationId}}CallbackFunction;
	{{/vendorExtensions.x-codegen-response.isString}}
	{{/vendorExtensions.x-codegen-response.isPrimitiveType}}
	{{/isMapContainer}}
	{{/isListContainer}}
	{{/returnType}}
	{{^returnType}}
	/// <summary>
	/// {{operationId}} callback that will be invoked when the server response is received.
	/// </summary>
	typedef std::function<void(bool)> {{operationId}}CallbackFunction;
	{{/returnType}}
	void Set{{operationId}}Callback({{operationId}}CallbackFunction Callback);
	void Remove{{operationId}}Callback();

	/// <summary>
	/// {{summary}}
	/// </summary>
	{{#allParams}}
	/// <param name="{{paramName}}">{{description}}{{^required}} (optional{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/required}}</param>
	{{/allParams}}
	UFUNCTION(BlueprintCallable, Category = "KnetikCloud")
	void {{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{^required}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
	{{/operation}}

private:
	{{#operation}}
	void {{operationId}}OnResponseReceived(FHttpRequestPtr Request, FHttpResponsePtr Response, bool bWasSuccessful);
	{{operationId}}CallbackFunction {{operationId}}Callback;

	{{/operation}}
};
{{/operations}}
